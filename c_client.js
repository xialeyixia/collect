import * as zmq from "zeromq";

async function run() {
  const sock = new zmq.Request();

  sock.connect("tcp://127.0.0.1:3000");
  console.log("Producer bound to port 3000");
  let i = 1;
  let mid = 1;
  let datas = JSON.stringify({
    type: i,
    status: 0,
    mid: mid,
    date_time: "2025-08-01 19:21:01",
    duration: 0,
    rbw: 519,
    harmonic: 0,
    frequency_count: 201,
    frequency_min: 70000000,
    frequency_max: 120000000,
    power:
      "-94.69,-94.69,-94.69,-95.69,-93.19,-96.19,-96.19,-95.19,-94.69,-96.19,-95.19,-96.19,-95.69,-95.19,-98.69,-96.19,-98.19,-95.19,-95.19,-95.69,-95.69,-95.19,-95.19,-97.69,-97.72,-95.72,-94.72,-95.22,-95.72,-96.72,-97.72,-95.72,-95.22,-95.72,-95.72,-94.22,-95.72,-95.22,-95.72,-95.72,-97.22,-94.72,-95.22,-94.72,-92.22,-80.22,-84.22,-92.22,-93.22,-95.22,-94.72,-93.72,-94.22,-95.22,-99.72,-96.22,-96.72,-95.72,-94.72,-92.22,-95.22,-96.75,-96.25,-94.75,-95.25,-94.75,-95.75,-93.75,-96.75,-95.25,-95.25,-94.25,-94.25,-96.25,-95.25,-96.25,-96.25,-94.75,-94.25,-93.75,-98.25,-94.25,-95.25,-96.25,-96.25,-95.75,-96.75,-94.75,-94.75,-94.75,-94.75,-95.75,-97.75,-96.25,-92.25,-95.75,-95.75,-96.28,-95.28,-95.28,-95.28,-96.28,-93.78,-94.78,-95.78,-97.28,-94.78,-94.78,-97.78,-95.78,-95.28,-94.28,-96.78,-96.78,-95.28,-98.78,-95.78,-99.28,-97.28,-96.28,-96.78,-96.78,-95.78,-97.78,-96.28,-95.28,-95.28,-92.78,-94.28,-95.28,-97.28,-88.78,-89.28,-95.28,-97.81,-96.81,-97.81,-94.81,-96.81,-96.31,-91.81,-92.31,-95.81,-94.81,-88.31,-87.31,-96.31,-92.81,-91.81,-94.31,-93.81,-94.81,-95.31,-97.31,-94.81,-94.81,-95.81,-94.81,-96.31,-96.81,-96.31,-94.81,-93.31,-94.81,-96.31,-96.31,-94.31,-95.31,-96.31,-96.81,-94.84,-94.84,-95.34,-94.34,-93.34,-96.34,-97.84,-94.34,-93.84,-95.84,-95.34,-96.84,-94.84,-97.34,-95.34,-94.84,-94.84,-95.84,-96.84,-98.34,-95.84,-95.34,-94.34,-95.34,-96.84,-96.84,-95.34,-94.34,-96.34,-93.84,-95.34",
    ai: "-94.69,-94.69,-94.69",
  });
  while (true) {
    await sock.send(datas);
    if (i == 1) {
      i = 0;
    } else {
      i = 1;
    }
    mid++;
    const [result] = await sock.receive();
    console.log(result.toString(), 111111111);
  }
}

run();

